"use strict";
self["webpackHotUpdate_kami_ui_storybook"]("stories_Button_tsx",{

/***/ "./stories/Button.tsx":
/*!****************************!*\
  !*** ./stories/Button.tsx ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Button: () => (/* binding */ Button)
/* harmony export */ });
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ "../node_modules/next/dist/compiled/react/jsx-dev-runtime.js");
/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-jsx/style */ "../node_modules/styled-jsx/style.js");
/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "../node_modules/next/dist/compiled/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _button_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./button.css */ "./stories/button.css");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "../node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ../node_modules/react-refresh/runtime.js */ "../node_modules/react-refresh/runtime.js");





/**
 * Primary UI component for user interaction
 */ const Button = (param)=>{
    let { primary = false, size = "medium", backgroundColor, label, ...props } = param;
    const mode = primary ? "storybook-button--primary" : "storybook-button--secondary";
    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("button", {
        type: "button",
        ...props,
        className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([
            [
                "1db2ff09cbb475ab",
                [
                    backgroundColor
                ]
            ]
        ]) + " " + (props && props.className != null && props.className || [
            "storybook-button",
            "storybook-button--".concat(size),
            mode
        ].join(" ") || ""),
        children: [
            label,
            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default()), {
                id: "1db2ff09cbb475ab",
                dynamic: [
                    backgroundColor
                ],
                children: "button.__jsx-style-dynamic-selector{background-color:".concat(backgroundColor, "}")
            }, void 0, false, void 0, undefined)
        ]
    }, void 0, true, {
        fileName: "/home/aloo/programming/web-dev/kami-ui/storybook/stories/Button.tsx",
        lineNumber: 33,
        columnNumber: 5
    }, undefined);
};
_c = Button;
Button.__docgenInfo = {
    "description": "Primary UI component for user interaction",
    "methods": [],
    "displayName": "Button",
    "props": {
        "primary": {
            "required": false,
            "tsType": {
                "name": "boolean"
            },
            "description": "Is this the principal call to action on the page?",
            "defaultValue": {
                "value": "false",
                "computed": false
            }
        },
        "backgroundColor": {
            "required": false,
            "tsType": {
                "name": "string"
            },
            "description": "What background color to use"
        },
        "size": {
            "required": false,
            "tsType": {
                "name": "union",
                "raw": "'small' | 'medium' | 'large'",
                "elements": [
                    {
                        "name": "literal",
                        "value": "'small'"
                    },
                    {
                        "name": "literal",
                        "value": "'medium'"
                    },
                    {
                        "name": "literal",
                        "value": "'large'"
                    }
                ]
            },
            "description": "How large should the button be?",
            "defaultValue": {
                "value": "'medium'",
                "computed": false
            }
        },
        "label": {
            "required": true,
            "tsType": {
                "name": "string"
            },
            "description": "Button contents"
        },
        "onClick": {
            "required": false,
            "tsType": {
                "name": "signature",
                "type": "function",
                "raw": "() => void",
                "signature": {
                    "arguments": [],
                    "return": {
                        "name": "void"
                    }
                }
            },
            "description": "Optional click handler"
        }
    }
};
var _c;
__webpack_require__.$Refresh$.register(_c, "Button");


const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

});
//# sourceMappingURL=stories_Button_tsx.e9db330cdd6dcfc41762.hot-update.js.map